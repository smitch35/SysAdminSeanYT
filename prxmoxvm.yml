---
- name: Create Proxmox VM
  hosts: localhost
  gather_facts: no
  
  vars_prompt:
    - name: vm_name
      prompt: "Enter the VM name"
  
  tasks:
    - name: Import proxmoxer library
      import_python:
        src: proxmoxer
      delegate_to: localhost

    - name: Get a list of existing VM IDs
      proxmox:
        node: your-proxmox-node  # Replace with your Proxmox node name or IP
        vmid: '*'               # Query all VMs
      register: existing_vms

    - name: Determine the next available VM ID
      set_fact:
        next_vmid: "{{ existing_vms.vms | map(attribute='vmid') | max | default(100) + 1 }}"

    - name: Debug next available VM ID
      debug:
        var: next_vmid

    - name: Create Proxmox VM
      proxmox_kvm:
        node: your-proxmox-node  # Replace with your Proxmox node name or IP
        vmid: "{{ next_vmid }}"               # VM ID
        name: "{{ vm_name }}"             # VM name
        ostemplate: local:iso/path/to/linux.iso  # Path to your ISO on the Proxmox node
        storage: local-lvm      # Storage name (change as needed)
        memory: 2048            # Memory in MB
        cores: 2                # Number of CPU cores
        net0: virtio,bridge=vmbr0=vlan30  # NIC on VLAN 30
        ide0: local-lvm:100     # 100GB IDE disk
        onboot: yes
        agent: 1               # Install qemu-guest-agent (optional)
        ostype: l26
        scsihw: virtio-scsi-pci
        boot: d
        kvm: yes

    - name: Ensure VM is started
      proxmox_kvm:
        node: your-proxmox-node
        vmid: "{{ new_vmid }}"
        state: started

    - name: Wait for the VM to be running
      wait_for:
        timeout: 300
        host: your-proxmox-node
        port: 22
        state: started

    - name: Print VM information
      proxmox:
        node: your-proxmox-node
        vmid: "{{ new_vmid }}"

    - name: Add new VM to the Ansible inventory
      add_host:
        name: "{{ vm_name }}"
        ansible_host: "{{ inventory_hostname }}"
        ansible_user: your-ssh-user  # Replace with the SSH user for the new VM